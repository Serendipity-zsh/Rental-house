<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.zwf.dao.RentalHouseDao">

    <!--打出所有出租屋信息-->
    <select id="queryRentalHouse" resultType="com.example.zwf.entity.RentalHouse">
		SELECT *
		FROM tb_rental_house
		where state="未出租" or state="审核失败"
		ORDER BY id
	</select>

    <!--根据email查询出租屋信息-->
    <select id="queryRentalHouseByEmail" resultType="com.example.zwf.entity.RentalHouse">
		SELECT *
		FROM tb_rental_house
		WHERE
		email=#{email} and state="未出租"
	</select>

    <!--在数据库里面添加出租屋信息-->
    <insert id="insertRentalHouse" useGeneratedKeys="true" keyProperty="id"
            keyColumn="id" parameterType="com.example.zwf.entity.RentalHouse">
		INSERT INTO
		tb_rental_house(email,rname,name,location,area,price,number,oriented,house_type,introduction,wechat,state)
		VALUES
		(#{email},#{rname},#{name},
		#{location},#{area},#{price},#{number},#{oriented},#{houseType},#{introduction},#{wechat},#{state})
	</insert>

    <!--更新出租屋信息-->
    <update id="updateRentalHouse" parameterType="com.example.zwf.entity.RentalHouse">
        update tb_rental_house
        <set>
            <if test="email != null">email=#{email},</if>
            <if test="rname != null">rname=#{rname},</if>
            <if test="name != null">name=#{name},</if>
            <if test="location != null">location=#{location},</if>
            <if test="area != null">area=#{area},</if>
            <if test="price != null">price=#{price},</if>
            <if test="number != null">number=#{number},</if>
            <if test="oriented != null">oriented=#{oriented},</if>
            <if test="houseType != null">house_type=#{houseType},</if>
            <if test="introduction != null">introduction=#{introduction},</if>
            <if test="wechat != null">wechat=#{wechat}</if>
        </set>
        where id=#{id}
    </update>

    <!--删除出租屋信息-->
    <delete id="deleteRentalHouse">
		DELETE FROM
		tb_rental_house
		WHERE
		id =
		#{id}
	</delete>

    <!--根据价格范围列出出租屋信息-->
    <select id="queryRentalHouseByPrice" resultType="com.example.zwf.entity.RentalHouse">
    SELECT *
    FROM tb_rental_house
    WHERE
    (price between #{minPrice} and #{maxPrice} and state="未出租") or (price between #{minPrice} and #{maxPrice} and state="审核失败")
    </select>

    <!--根据一个价格值查找出租屋信息-->
    <select id="queryRentalHouseByOnePrice" resultType="com.example.zwf.entity.RentalHouse">
    SELECT *
    FROM tb_rental_house
    WHERE
    (price = #{price} and state="未出租") or (price = #{price} and state="审核失败")
    </select>


    <!--根据位置列出出租屋信息-->
    <select id="queryRentalHouseByLocation" resultType="com.example.zwf.entity.RentalHouse">
    SELECT *
    FROM tb_rental_house
    WHERE
    (location=#{location} and state="未出租") or (location=#{location} and state="审核失败")
    </select>

    <!--根据面积范围列出出租屋信息-->
    <select id="queryRentalHouseByArea" resultType="com.example.zwf.entity.RentalHouse">
    SELECT *
    FROM tb_rental_house
    WHERE
    (area between #{minArea} and #{maxArea} and state="未出租") or (area between #{minArea} and #{maxArea} and state="审核失败")
    </select>

    <!--根据一个面积值查找出租屋信息-->
    <select id="queryRentalHouseByOneArea" resultType="com.example.zwf.entity.RentalHouse">
    SELECT *
    FROM tb_rental_house
    WHERE
    (area = #{area} and state="未出租") or (area = #{area} and state="审核失败")
    </select>


    <!--根据id查找出租屋信息-->
    <select id="queryRentalHouseById" resultType="com.example.zwf.entity.RentalHouse">
    SELECT *
    FROM tb_rental_house
    WHERE id=#{id}
    </select>

    <!--房客更新出租屋状态: 未出租——待审核-->
    <update id="updateRentalHouseState1" parameterType="com.example.zwf.entity.RentalHouse">
        update tb_rental_house
        <set>
        <if test="state != null">state=#{state},</if>
        <if test="tenantEmail!= null">tenant_email=#{tenantEmail}</if>
        </set>
        where id=#{id}
    </update>

    <!--房客取消申请: 待审核——未出租-->
    <update id="cancelRentalHouseState1" parameterType="com.example.zwf.entity.RentalHouse">
        update tb_rental_house
        <set>
            <if test="state != null">state=#{state}</if>
        </set>
        where id=#{id}
    </update>

    <!--房东更新出租屋状态: 待审核——已出租-->
    <update id="updateRentalHouseState2" parameterType="com.example.zwf.entity.RentalHouse">
        update tb_rental_house
        <set>
        <if test="state != null">state=#{state}</if>
        </set>
        where id=#{id}
    </update>
    <!--	更新出租屋图片-->
    <update id="updateRentalHouseImage" parameterType="com.example.zwf.entity.RentalHouse">
        update tb_rental_house
        <set>
            <if test="imageUrl != null">image_url=#{imageUrl}</if>
        </set>
        where id=#{id}
    </update>

    <!--房主拒绝出租: 待审核——审核失败-->
    <update id="cancelRentalHouseState2" parameterType="com.example.zwf.entity.RentalHouse">
        update tb_rental_house
        <set>
        <if test="state != null">state=#{state},</if>
            <if test="tenantEmail == null">tenant_email=#{tenantEmail}</if>
        </set>
        where id=#{id}
    </update>


    <!--房客获取申请过的出租屋信息-->
    <select id="getRentalHouseToTenant"  resultType="com.example.zwf.entity.RentalHouse">
    SELECT *
    FROM tb_rental_house
    WHERE
    (tenant_email=#{tenantEmail} and state ="待审核") or(tenant_email=#{tenantEmail} and state ="已出租") or (tenant_email=#{tenantEmail} and state ="审核失败")
    </select>

    <!--房东获取被申请过的出租屋信息-->
    <select id="getRentalHouseToLandlord"  resultType="com.example.zwf.entity.RentalHouse">
    SELECT *
    FROM tb_rental_house
    WHERE
    email=#{email} and state ="待审核"
    </select>



</mapper>
